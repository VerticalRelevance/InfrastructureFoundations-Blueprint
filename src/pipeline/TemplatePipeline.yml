Parameters:
#Why are they ordered alphabetically when creating the stack regardless of how we place them here?
  VPC:
    Description: Please select the VPC used for the project
    Type: AWS::EC2::VPC::Id
  Subnet:
    Description: Please select the subnet to be used for this configuration
    Type: AWS::EC2::Subnet::Id
  WhichInstance:
    Description: What program will you be installing?
    Type: String
    AllowedValues:
      - ElastiCache
      - EC2
Mappings:

  CodeBuildDetails:
    ValidationVariables:
      SecurityRole: arn:aws:iam::396791034774:role/service-role/codebuild-ecr-test-service-role

  PipelineDetails:
    EC2:
      TemplateSource: ec2Art
      S3CFTZIP: EC2_build/EC2_build.zip
      FileName: /templates/EC2CFT.yml 

    ElastiCache:
      TemplateSource: ecrArt
      S3CFTZIP: elasticache_build/ecr_file.zip
      FileName: /templates/ECR_template.yml 

    CommonVariables:
      Provider: S3
      FileBucket: hashicorptestingbucket
      RoleArn: arn:aws:iam::396791034774:role/service-role/pipeline-testing
      ArtifactBucket: artifacttestingbucket
      ValSource: ValArt
      ValZip: cft_validation/cft_val.zip
      ProjectName: ValCodeBuild

Resources:  

  CatalogProduct:
    Type: AWS::ServiceCatalog::CloudFormationProduct
    Properties:
      Name: !Ref WhichInstance
      Owner: Vertical Relevance
      ProvisioningArtifactParameters:
        - Name: CreateCatalogProduct
          Info:
            LoadTemplateFromURL: https://hashicorptestingbucket.s3.amazonaws.com/pipeline/Empty.yml #make blank file

  Portfolio:
    Type: AWS::ServiceCatalog::Portfolio
    Properties:
      Description: Portfolio to host instance products 
      DisplayName: Created Instances 
      ProviderName: Vertical Relevance

  ProductToPortfolio:
    Type: AWS::ServiceCatalog::PortfolioProductAssociation
    Properties:
      PortfolioId: !Ref Portfolio
      ProductId: !Ref CatalogProduct

  EndUsers:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Properties:
      PortfolioId: !Ref Portfolio
      PrincipalARN: arn:aws:iam::396791034774:group/EndUsers
      PrincipalType: IAM

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !FindInMap ['PipelineDetails', 'CommonVariables', 'ArtifactBucket']
        Type: !FindInMap ['PipelineDetails','CommonVariables', 'Provider']
      RoleArn: !FindInMap ['PipelineDetails', 'CommonVariables','RoleArn']
      Stages:
        # - Name: Source
        #   Actions: 
        #     - Name: SourceAction
        #       ActionTypeId:
        #         Category: Source
        #         Owner: ThirdParty
        #         Provider: GitHub
        #         Version: 1
        #       Configuration:
        #         Owner: jdsouza-vr
        #         Repo: InfrastructureFoundations-RefArchitecture
        #         Branch: ansible-vault
        #         OAuthToken: "{{resolve:secretsmanager:pipeline-github:secretstring:GitHubPersonalAccessToken}}"
        #         PollforSourceChanges: false
        - Name: Source
          Actions:
            - Name: valSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: !FindInMap ['PipelineDetails','CommonVariables', 'Provider']
                Version: 1
              OutputArtifacts:
                - Name: !FindInMap ['PipelineDetails', 'CommonVariables', 'ValSource']
              Configuration:
                S3Bucket: !FindInMap ['PipelineDetails', 'CommonVariables', 'FileBucket']
                S3ObjectKey: !FindInMap ['PipelineDetails', 'CommonVariables', 'ValZip']
              
        - Name: Validation
          Actions:
            - Name: ValBuild 
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: !FindInMap ['PipelineDetails', 'CommonVariables', 'ValSource'] 
              Configuration:
                ProjectName: !FindInMap ['PipelineDetails', 'CommonVariables', 'ProjectName']
              OutputArtifacts:
                - Name: ValOutArt
        - Name: Catalog 
          Actions:
            - Name: CatalogDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ServiceCatalog
                Version: 1
              InputArtifacts:
                - Name: ValOutArt
              Configuration:
                TemplateFilePath: !FindInMap ['PipelineDetails', !Ref WhichInstance, 'FileName']
                ProductVersionName: !Ref WhichInstance
                ProductType: CLOUD_FORMATION_TEMPLATE
                ProductId: !Ref CatalogProduct
  # Webhook:
  #   Type: AWS::CodePipeline::Webhook
  #   Properties:
  #     Name: GitHub Hook 
  #     Authentication: GITHUB_HMAC
  #     AuthenticationConfiguration:
  #       SecretToken: "{{resolve:secretsmanager:pipeline-github:secretstring:GitHubPersonalAccessToken}}"
  #     Filters:
  #     - JsonPath: "$.ref"
  #       MatchEquals: refs/heads/ansible-vault
  #     TargetAction: Source
  #     TargetPipeline: !Ref CodePipeline
  #     TargetPipelineVersion: !GetAtt CodePipeline.Version


